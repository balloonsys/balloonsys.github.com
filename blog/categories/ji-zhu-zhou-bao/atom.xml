<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 技术周报 | Balloonsys Inc.]]></title>
  <link href="http://balloonsys.github.io/blog/categories/ji-zhu-zhou-bao/atom.xml" rel="self"/>
  <link href="http://balloonsys.github.io/"/>
  <updated>2016-06-27T09:57:43+08:00</updated>
  <id>http://balloonsys.github.io/</id>
  <author>
    <name><![CDATA[Linkou Bian]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[平安好房iOS开发团队技术周报（第六期）]]></title>
    <link href="http://balloonsys.github.io/blog/2016/06/27/tech-notes-6/"/>
    <updated>2016-06-27T09:57:31+08:00</updated>
    <id>http://balloonsys.github.io/blog/2016/06/27/tech-notes-6</id>
    <content type="html"><![CDATA[<p>本期周报主要包括iOS 10中通知相关的变化、Swift中try的用法、颜色与标注稿不一致的问题等。</p>

<!--more-->


<h2>资讯</h2>

<h4>1) <a href="http://www.loopinsight.com/2016/06/23/apple-discontinues-thunderbolt-display/">Apple discontinues Thunderbolt Display</a></h4>

<p>服役五年的 Thunderbolt Display已经正式停产，剩下的存货仍会在Apple线上商店与零售点销售。</p>

<h4>2) <a href="http://fichek.com/blog/wwdc16-notifications/">WWDC16 - New in Notifications</a></h4>

<p>Notification相关的API从UIKit挪到了新的framework，<a href="http://fichek.com/contact/">Filip Radelic</a>对其变化做了很好的总结。</p>

<p>另附一篇介绍Notification的中文文章<a href="http://www.jianshu.com/p/9b720efe3779">iOS 10  推送Notification新特性</a>。</p>

<h2>开发</h2>

<h4>1) <a href="https://ashfurrow.com/blog/uicollectionview-unjustly-maligned/">UICollectionView: Unjustly Maligned</a></h4>

<p>500px首个iPad版本、Artsy都出自本文作者<a href="https://ashfurrow.com/about/">Ash Furrow</a>之手。同时他也是iOS UICollectionView: The Complete Guide一书的作者。</p>

<p>Ash在文中介绍了如何用UICollectionView构建Artsy的页面。</p>

<p>另外有两篇文章不错，建议一读：<a href="https://adoptioncurve.net/archives/2016/06/collection-view-updates-in-ios10/">Collection View Updates in iOS10, Part 1</a>和<a href="https://adoptioncurve.net/archives/2016/06/collection-view-updates-in-ios10-part-2/">Collection View Updates in iOS10 Part 2</a>。</p>

<h4>2) <a href="http://stackoverflow.com/a/32390612">Swift - try, try! &amp; try?的区别</a></h4>

<p>guard let result = try? doSomething() else {}是一个较为常用的代码范式。另外这种范式下若有异常，会被『翻译』成nil，所以不会捕获到具体的出错原因。故适用于只关注成功或失败这一结果的场景。</p>

<h2>工具</h2>

<h4>1) <a href="http://jaykon.github.io/2014/06/17/ioskai-fa-zhong-de-yan-se-wen-ti/">iOS开发中的颜色问题</a></h4>

<p>设计师给的颜色值标注，设置到app里显示不一致？可能和色彩标准不同有关。比如设计师用的是Generic RBG或者Adobe RGB，而程序里是基于sRGB。</p>

<h4>2) <a href="https://github.com/gskbyte/GSKStretchyHeaderView">GSKStretchyHeaderView</a></h4>

<p>类似Twitter的弹性视图。</p>

<h2>其他</h2>

<h4>1) <a href="https://github.com/linkedin/swift-style-guide">Swift Style Guide</a></h4>

<p>据说LinkedIn用Swift重写了自家的app，这是他们的代码规范。</p>

<h4>2) <a href="http://www.ituring.com.cn/book/397">写给大家看的设计书</a></h4>

<blockquote><p>如果要在简单表达和并不专业的设计之间做出选择，你应该选择简单表达。设计技能的逐步提高是从简单表达开始的。</p></blockquote>

<p>iPhone的成功，降低了产品经理（大部分只有抄袭还抄不好的能力）的门槛；APP的泛滥，降低了软件工程师（鱼龙混杂，水货较多）的门槛；iOS 7开始，降低了设计师（大部分也就是个Photoshop熟练工）的门槛。</p>

<p>@end</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[平安好房iOS开发团队技术周报（第五期）]]></title>
    <link href="http://balloonsys.github.io/blog/2016/06/23/tech-notes-5/"/>
    <updated>2016-06-23T16:31:43+08:00</updated>
    <id>http://balloonsys.github.io/blog/2016/06/23/tech-notes-5</id>
    <content type="html"><![CDATA[<p>本期周报主要包括Xcode扩展、Method Swizzle、Git分支实践等内容。</p>

<!--more-->


<h2>资讯</h2>

<h4>1) <a href="http://daringfireball.net/linked/2016/06/22/ios-10-kernel">iOS 10 内核未加密</a></h4>

<p>苹果发言人称: “The kernel cache doesn’t contain any user info, and by unencrypting it we’re able to optimize the operating system’s performance without compromising security.”</p>

<h4>2) <a href="https://www.raywenderlich.com/135655/whats-new-swift-3">What’s New in Swift 3?</a></h4>

<p>虽然暂时还没必要迁移至Swift 3（下半年还会有改动），但语言的主要变动还是需要了解的。</p>

<h2>开发</h2>

<h4>1) <a href="http://www.russbishop.net/xcode-extensions">Xcode Source Editor Extension</a></h4>

<p>在菜单触发插件，XCSourceEditorCommand 拦截到该消息。我们从 invocation 中拿到 buffer，根据当前行可以获取到需要的数据。我的<a href="https://github.com/balloonsys/PAXcodePlugin">示例</a>是直接增加一行NSLog代码，所以把数据设置回去即可。</p>

<p>该教程不仅教你怎么做，还将可能遇到的问题及可尝试的解决方案写的很明白。我实现了一个打印当前方法名的插件，用以快速插入代码。另外，如果需要中文教程，可参看钟颖的<a href="https://zhuanlan.zhihu.com/p/21374552">文章</a>。</p>

<h4>2) <a href="http://xiongzenghuidegithub.github.io/blog/2016/04/22/runtimeying-yong-fang-zhi-an-niu-lian-xu-dian-ji/">借助Runtime防止按钮连续点击</a></h4>

<p>按钮连续点击的问题解决起来不难，使用Runtime交换SEL即可控制。</p>

<h4>3) <a href="http://www.jianshu.com/p/cabec2786241">UICollectionView的自定义布局</a></h4>

<p>这篇文章不是分享UICollectionView的详细使用教程，而是属于比较高级的使用技巧。</p>

<h2>工具</h2>

<h4>1) <a href="https://simpholders.com">SimPholders</a></h4>

<p>从menu快速访问iOS模拟器里的app目录。</p>

<h4>2) <a href="https://www.sqlitepro.com">SQLPro for SQLite</a></h4>

<p>移动端数据通常使用SQLite存储，若需要方便的管理其中的数据，请不要错过SQLPro for SQLite。另外插一句使用Core Data的经验，不同版本对应的sqlite文件最好本地保存一份。这样哪天需要测试数据迁移会省不少精力。</p>

<h2>其他</h2>

<h4>1) <a href="http://nvie.com/posts/a-successful-git-branching-model/">A successful Git branching model</a></h4>

<p>自从转行做iOS开发以来，一直使用Git做代码版本管理。而Git分支的最佳实践，个人最推崇<a href="http://nvie.com/about/">Vincent Driessen</a>的做法。之所以po这个，是因为昨天运维部宣讲了服务端代码分支的管理方案。</p>

<h4>2) <a href="http://mp.weixin.qq.com/s?__biz=MzA4ODgwNjk1MQ==&amp;mid=2653788317&amp;idx=1&amp;sn=b5ca8129c2ae99b37f1872d1bbe367c4">漫谈 Airbnb 支付的国际化</a></h4>

<blockquote><p>为了让古巴人也可以在 Airbnb 上租房，我们使用了 VaCuba 这种支付方式，其本质就是人工开着游艇、驾着飞机、骑着自行车，将现金像送货那样送到房东的家里。</p></blockquote>

<p>@end</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[平安好房iOS开发团队技术周报（第四期）]]></title>
    <link href="http://balloonsys.github.io/blog/2016/06/21/tech-notes-4/"/>
    <updated>2016-06-21T13:13:13+08:00</updated>
    <id>http://balloonsys.github.io/blog/2016/06/21/tech-notes-4</id>
    <content type="html"><![CDATA[<p>本期周报主要包括iMessage Extension的开发、Reveal的使用等内容。</p>

<!--more-->


<h2>资讯</h2>

<h4>1) <a href="http://www.augustyniak.me/post/2016/06/wwdc-sessions-watching-guide/">WWDC Videos Watching Guide</a></h4>

<p>另外也可以看一下百度Hi iOS团队写的<a href="http://baiduhidevios.github.io/2016/06/14/WWDC-2016-%E8%A7%82%E5%BD%B1%E6%8C%87%E5%8D%97/">WWDC 2016 观影指南</a>。</p>

<h4>2) <a href="http://www.theverge.com/2016/6/15/11940010/walt-mossberg-apple-wwdc-2016-recap-themes">Apple is still a world of its own</a></h4>

<p>文中提到了an Apple executive匿名回答为何不提供Android版iMessage。一是卖出的设备足够多，已经有足够量级的数据支撑其AI；二是有助于卖出更多苹果设备。</p>

<h2>开发</h2>

<h4>1) <a href="https://developer.apple.com/library/prerelease/content/samplecode/IceCreamBuilder/Introduction/Intro.html">iMessage App开发</a></h4>

<p>上周看<a href="https://twitter.com/jquave">Jason Newell</a>的文章<a href="http://jamesonquave.com/blog/creating-imessage-apps-with-xcode-8-tutorial-part-1/">Creating iMessage Apps on iOS 10 with Swift – Tutorial (Part 1)</a>做过一个iMessage Sticker，让用户发送平安『医食住行玩』这样的GIF动画。</p>

<p>最好的案例非苹果的官方Sample莫属，请点击标题中的链接。</p>

<h4>2) <a href="http://colin1994.github.io/2016/06/17/Call-Directory-Extension-Study/">来电黑名单</a></h4>

<p>iOS 10中引入了CallKit，意味着现在可以通过 Call Directory Extension 来实现电话黑名单功能了。</p>

<h4>3) <a href="http://jamesonquave.com/blog/adding-siri-to-ios-10-apps-in-swift-tutorial/">Intents Extension</a></h4>

<p>把玩SiriKit，更多内容请见该文的<a href="http://jamesonquave.com/blog/sirikit-swift-3-resolutions-sirikit-tutorial-part-2/">下篇</a>。更翔实的<a href="https://developer.apple.com/library/prerelease/content/samplecode/UnicornChat/Introduction/Intro.html#//apple_ref/doc/uid/TP40017332-Intro-DontLinkElementID_2">案例</a>还是看苹果的吧。</p>

<h2>工具</h2>

<h4>1) <a href="http://revealapp.com/blog/reveal-common-tips-cn.html">Reveal常用技巧</a></h4>

<p>通过Xcode中加断点的方式集成Reveal比较惊艳。iOS系统越狱之后使用Reveal查看别人App视图结构的过程可以参考这篇<a href="http://hihilong.com/2015/11/20/ios9-reveal-jailbreak-app/">文章</a>。</p>

<p>另外，听云某位工程师在某版本Reveal的dylib不支持arm时制作支持arm版的<a href="http://blog.tingyun.com/web/article/detail/262">实践</a>（其实那个时间点最新的Reveal完全支持啊！！！）</p>

<h4>2) <a href="https://github.com/noodlewerk/NWPusher">NWPusher</a></h4>

<p>做iOS 消息推送，需要测试推送证书、推送功能是否正常，强烈推荐使用这款小工具。省时、省力，避免和服务端扯皮。</p>

<h2>其他</h2>

<h4>1) <a href="http://azureyu.com/iOSDevRecord.html">iOS独立开发记录</a></h4>

<p>从想法、设计、开发到最终发布，总结个人开发APP的历程。</p>

<h4>2) <a href="http://www.ruanyifeng.com/blog/2016/05/time-management.html">时间管理的七句话</a></h4>

<p>网上有不少转载Facebook内部高效工作PPT指南的文章，配的中文不忍直视。推荐看这篇带注释的精华版。</p>

<blockquote><p>不要同时做多件事，结果可能都没做好，还拖长了工作时间。</p></blockquote>

<p>@end</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[平安好房iOS开发团队技术周报（第三期）]]></title>
    <link href="http://balloonsys.github.io/blog/2016/06/18/tech-notes-3/"/>
    <updated>2016-06-18T10:50:14+08:00</updated>
    <id>http://balloonsys.github.io/blog/2016/06/18/tech-notes-3</id>
    <content type="html"><![CDATA[<p>本期周报主要包括iOS 10的一些资讯，以及iOS一些常见问题的设计方案等。</p>

<!--more-->


<h2>资讯</h2>

<h4>1) <a href="https://onevcat.com/2016/06/ios-10-sdk/">开发者所需要知道的iOS 10 SDK新特性</a></h4>

<p>从应用开发者的角度看，iOS 10中并没有加入太多内容。</p>

<h4>2) <a href="https://onevcat.com/2016/06/ios-10-ats/">关于iOS 10中ATS的问题</a></h4>

<p>从2017年1月1日起，所有的新提交app默认是不允许使用NSAllowsArbitraryLoads来绕过ATS限制的。</p>

<h2>开发</h2>

<h4>1) <a href="http://www.jianshu.com/p/0497afdad36d#">可复用而且高度解耦的用户统计埋点实现</a></h4>

<p>该埋点方案和我上个月做的统计SDK思路比较一致。不同的在于用户点击事件，文中的做法是拦截UIControl的方法，而我倾向于由APP自行埋点。主要原因在于，被hook的范围较广，同时我们点击事件埋点时，有酌情传入参数的额外需求。</p>

<h4>2) <a href="https://segmentfault.com/a/1190000005744865">iOS释放自注销模式设计</a></h4>

<p>作者描述的问题的确是我们开发中的痛点，只不过我对这篇文章理解的还不够，毕竟工程师的层次也是有差异的:P</p>

<h2>工具</h2>

<h4>1) <a href="https://medium.com/swift-and-ios-writing/a-quick-look-at-uiviewpropertyanimator-a107fb9da5b5">iOS 10 UIKit Animations</a></h4>

<p>我倒是对文章作者的开源库<a href="https://github.com/marmelroy/Interpolate">Interpolate</a>更感兴趣，哈哈！</p>

<h4>2) <a href="https://luckymarmot.com/zh-hans/paw">Mac最先进的HTTP客户端</a></h4>

<p>做iOS开发，联调API是件很麻烦的事情，特别是当提供API的是个开发新手。联调阶段我通常选用Paw而不是Postman。</p>

<h2>其他</h2>

<h4>1) <a href="https://developer.apple.com/support/beta-software/install-ios-beta/">iOS beta Software Installation Guide</a></h4>

<p>本周已采用Configuration Profile的方式安装了iOS 10的beta版，比Restore Image的方案更简便。</p>

<h4>2) <a href="http://www.jianshu.com/p/080d109a9984">每个IT人都应该了解的工作观和商业思维</a></h4>

<p>文中整理了来自37signals的两位联合创始人Rework一书的要点，个人特别喜欢这条：</p>

<blockquote><p>工作狂使得真正高效且不崇尚加班的员工感到无所适从，心怀愧疚，士气低落而且跟风加班，根本就不管到底有没有生产力。</p></blockquote>

<p>@end</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[平安好房iOS开发团队技术周报（第二期）]]></title>
    <link href="http://balloonsys.github.io/blog/2016/06/15/tech-notes-2/"/>
    <updated>2016-06-15T11:18:44+08:00</updated>
    <id>http://balloonsys.github.io/blog/2016/06/15/tech-notes-2</id>
    <content type="html"><![CDATA[<p>本期周报主要包括平安好房APP在模块化架构推进过程中遇到的一些有意思的技术问题，当然也有一点点关于WWDC 16的资讯（开发者版）。</p>

<!--more-->


<h2>资讯</h2>

<h4>1) <a href="http://www.mac52ipod.cn/post/apple-wwdc-2016-event-5-min-briefintroduction.php">WWDC 2016 新系统发布会5分钟无废话版简介</a></h4>

<p>苹果还宣布了一个为 Flash/SSD储存设备优化的新文件系统Apple File System（APFS），希望对我那台老MBP有所帮助（前不久刚自己动手换了SSD）。APFS预计将在2017年发布，暂不会提供它的开源实现。</p>

<p>技术人员的目光不要被各类媒体的无脑小编带偏，至于其他方面的更新，此处不表，冷嘲也好、热讽也罢。</p>

<h4>2) <a href="https://zhuanlan.zhihu.com/p/21354243">关于 WWDC 16 总得说点什么</a></h4>

<p>开发者记录的一些感想，作者曾在QQ音乐团队独立完成Apple Watch端第一个版本，目前在阿里巴巴。</p>

<h2>开发</h2>

<h4>1) <a href="http://stackoverflow.com/questions/22018272/nsinvocation-returns-value-but-makes-app-crash-with-exc-bad-access">NSInvocation returns value but crash the app</a></h4>

<p>在平安好房APP推进模块化架构过程中，对一些曾经使用MRC的代码做了ARC迁移。冷不丁的被NSInvocation调用给坑了一把。</p>

<p>在ARC模式下，getReturnValue：仅仅是从invocation的返回值拷贝到指定的内存地址，如果返回值是一个NSObject对象的话，是没有处理内存管理的。而我们在定义returnValue时使用的是__strong类型的id类型，ARC就会假设该内存块已被retain（实际没有）。当returnValue出了定义域，被释放时，导致crash。</p>

<h4>2) <a href="http://stackoverflow.com/questions/7017281/performselector-may-cause-a-leak-because-its-selector-is-unknown">performSelector may cause a leak because its selector is unknown</a></h4>

<p>依旧是ARC迁移相关。在迁移到ARC之后，编译器给出了一个可能leak的警告。仔细研究后，决定采用SuppressPerformSelectorLeakWarning宏解决。</p>

<h4>3) <a href="https://www.raywenderlich.com/126365/ios-frameworks-tutorial">Creating and Distributing iOS Frameworks</a></h4>

<p>文章介绍了Framework模板的用法，特别是如何在项目中使用新建的Framework，其中的方案在好房统计SDK开发、架构演进过程中均实践过。</p>

<h2>工具</h2>

<h4>1) <a href="http://ayjkdev.top/2016/01/10/cocoapods-questions/">CocoaPods中一些问题的解决</a></h4>

<p>上一期周报提到过，目前不少公司模块化架构采用的CocoaPods方案。在使用CocoaPods的过程中难免遇到各类问题，翻翻这篇文章的总结，相信你会有些收获。</p>

<h4>2) <a href="http://www.schukin.com/achieving-awesomeness-with-local-cocoapods/">Achieving Awesomeness with Local CocoaPods</a></h4>

<p>作者（曾经是Twitter for Apple Watch的负责人）介绍了使用私有Pods的一些思考，有一段话非常赞同：</p>

<blockquote><p>While this approach works great if your Pods are stable, I’ve found that this doesn’t work too well if your Pods are still in active development; keeping them in lockstep with your application code can be a huge pain, particularly on larger teams with multiple feature branches.</p></blockquote>

<h4>3) <a href="http://soledad.me/blog/2015/12/21/octopress-and-el-capitan/">Octopress与El Capitan冲突问题解决方案</a></h4>

<p>近一年没有写blog，近一年没有用Octopress，所以与El Capitan冲突的问题也是上周末才知道。</p>

<p>小结一下：新系统下需要新的依赖库，而这些库需要ruby2.2.3的版本安装。</p>

<h2>其他</h2>

<h4>1) <a href="https://zhuanlan.zhihu.com/p/21350212">注册在开曼的公司，其期权究竟能不能买？</a></h4>

<p>updated on June 19: 当事公司是青云，看其<a href="http://media.weibo.cn/article?id=2309403987980699197994">回应</a>。</p>

<h4>2) 文摘</h4>

<p>人生的困扰大抵来自四个方面：不可避免的死亡，内心深处的孤独感，我们追求的自由以及生活并无显而易见的意义可言。</p>

<p>@end</p>
]]></content>
  </entry>
  
</feed>
