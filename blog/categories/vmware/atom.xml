<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: VMWare | Balloonsys Inc.]]></title>
  <link href="http://balloonsys.github.io/blog/categories/vmware/atom.xml" rel="self"/>
  <link href="http://balloonsys.github.io/"/>
  <updated>2014-09-07T16:55:30+08:00</updated>
  <id>http://balloonsys.github.io/</id>
  <author>
    <name><![CDATA[Linkou Bian]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在CentOS 6.5环境下安装Redmine]]></title>
    <link href="http://balloonsys.github.io/blog/2014/09/07/install-redmine-on-centos-6-dot-5/"/>
    <updated>2014-09-07T16:33:08+08:00</updated>
    <id>http://balloonsys.github.io/blog/2014/09/07/install-redmine-on-centos-6-dot-5</id>
    <content type="html"><![CDATA[<p>GitLab的Issue管理比较弱，如果开发测试为同一人的话，用用也还好。对于一个团队来讲，还是搭建个Redmine吧。</p>

<!--more-->


<h2>准备</h2>

<p>在<a href="http://baike.baidu.com/view/6313045.htm">bitnami</a>上下载<a href="http://baike.baidu.com/view/2228665.htm">Redmine</a>的<a href="https://bitnami.com/redirect/to/40137/bitnami-redmine-2.5.2-2-linux-x64-installer.run">Linux版</a>。</p>

<h2>安装</h2>

<p><code>sh
chmod +x bitnami-redmine-2.5.2-2-linux-x64-installer.run
sudo ./bitnami-redmine-2.5.2-2-linux-x64-installer.run
</code></p>

<p>根据想到的提示，选择语言、组件等，非常简单。端口么，本人设的8081，如果启用了防火墙，或许你还需要做如下配置：
<code>sh
sudo vi /etc/sysconfig/iptables
</code></p>

<p>添加-A INPUT -m state &mdash;state NEW -m tcp -p tcp &mdash;dport 8081 -j ACCEPT这条记录即可。打开浏览器访问<a href="http://">http://</a>&lt;ip_address>:8081/redmine，应该就OKay了。</p>

<h2>集成</h2>

<p>要用Redmine替换GitLab内嵌的Issue跟踪功能，只需做如下配置：
<code>sh
sudo vi /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml
</code></p>

<p>然后在External issue trackers部分，如下设置Redmine地址即可：
```sh
  ## External issues trackers
  issues_tracker:</p>

<pre><code>  redmine:
    title: "Redmine"
#   ## If not nil, link 'Issues' on project page will be replaced with this
#   ## Use placeholders:
#   ##  :project_id        - GitLab project identifier
#   ##  :issues_tracker_id - Project Name or Id in external issue tracker
    project_url: "http://172.16.198.129:8081/redmine/projects/:issues_tracker_id"
#
#   ## If not nil, links from /#\d/ entities from commit messages will replaced with this
#   ## Use placeholders:
#   ##  :project_id        - GitLab project identifier
#   ##  :issues_tracker_id - Project Name or Id in external issue tracker
#   ##  :id                - Issue id (from commit messages)
    issues_url: "http://172.16.198.129:8081/redmine/issues/:id"
#
#   ## If not nil, links to creating new issues will be replaced with this
#   ## Use placeholders:
#   ##  :project_id        - GitLab project identifier
#   ##  :issues_tracker_id - Project Name or Id in external issue tracker
    new_issue_url: "http://172.16.198.129:8081/redmine/projects/:issues_tracker_id/issues/new"
</code></pre>

<p>```</p>

<p>在浏览器打开GitLab中具体的项目，设置页面里便可以选择Issue跟踪系统了。选择Redmine，同时讲Redmine里对应项目的名称填在Project name or id in issues tracker字段。</p>

<p>OK，Redmine的安装、与GitLab的集成到此为止，在GitLab里点击Issue标签就会自动跳转到Redmine里了。</p>

<h2>后记</h2>

<p>至于如何将每次commit消息里的Fixes #issue_id和Redmine里的issue关联，暂时还没有研究。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在CentOS 6.5环境下安装GitLab]]></title>
    <link href="http://balloonsys.github.io/blog/2014/09/06/install-gitlab-on-centos-6-dot-5+2/"/>
    <updated>2014-09-06T11:32:15+08:00</updated>
    <id>http://balloonsys.github.io/blog/2014/09/06/install-gitlab-on-centos-6-dot-5 2</id>
    <content type="html"><![CDATA[<p>公司买了一台阿里云服务器部署项目测试坏境。看着服务器那么高的配置，便打算在上面搭建GitLab，以告别间歇性龟速的Bitbucket服务。当然喽，作为个人私有项目托管，我依然推荐使用BB。</p>

<!--more-->


<h2>准备</h2>

<p>查看服务器系统环境，以下载对应的GitLab包。
```sh</p>

<h1>查看内核版本</h1>

<p>uname -r</p>

<h1>查看发行版本</h1>

<p>cat /etc/redhat-release
```</p>

<p>根据服务器信息CentOS release 6.5 (Final)，到<a href="https://about.gitlab.com/downloads/">GitLab | Package downloads</a>下载对应的<a href="https://downloads-packages.s3.amazonaws.com/centos-6.5/gitlab-7.2.1_omnibus-1.el6.x86_64.rpm">RPM</a></p>

<p>用curl下载比较慢，所以我改用迅雷下载，然后scp到服务器主目录下。
```sh</p>

<h1>打包上传</h1>

<p>tar -zcvf gitlab.tar.gz gitlab-7.2.1_omnibus-1.el6.x86_64.rpm
scp gitlab.tar.gz user_name@ip_address:~/
```</p>

<p>登录服务器，解压rpm文件
<code>sh
ssh &lt;YOUR_USERNAME&gt;@&lt;YOUR_SERVER_IP&gt;
tar -zxvf gitlab.tar.gz
</code></p>

<h2>安装</h2>

<p><code>sh
sudo yum install openssh-server
sudo yum install postfix
sudo service postfix start
sudo chkconfig postfix on
sudo rpm -i gitlab-7.2.1_omnibus-1.el6.x86_64.rpm
</code></p>

<h2>配置</h2>

<p><code>sh
sudo -e /etc/gitlab/gitlab.rb
</code></p>

<p>将external_url设成服务器ip地址，然后执行
<code>sh
sudo gitlab-ctl reconfigure
sudo lokkit -s http -s ssh
</code></p>

<p>在浏览器地址栏输入服务器ip，以访问GitLab。管理员用户名为root，初始密码为5iveL!fe，首次登录后会要求改密码。</p>

<h2>问题</h2>

<p>当我在服务器安装之前，先在本地的虚拟机跑了一遍，很正常。但是当安装到真实的服务器时，访问GitLab遇到了502错误。</p>

<p>在命令行执行sudo gitlab-ctl tail可看到错误信息，原来是因为8080端口被项目测试环境占用，unicorn无法启动。</p>

<p>所以，很自然的想到去修改GitLab的配置文件。最终的配置信息如下：
```sh</p>

<h1>Change the external_url to the address your users will type in their browser</h1>

<p>external_url &lsquo;<a href="http://">http://</a>&lt;YOUR_SERVER_IP>:8888&rsquo;
redis[&lsquo;port&rsquo;] = 6379
postgresql[&lsquo;port&rsquo;] = 5432
unicorn[&lsquo;port&rsquo;] = 9999
nginx[&lsquo;listen_address&rsquo;] = &lsquo;&lt;YOUR_SERVER_IP>&rsquo;</p>

<h1>Limit backup lifetime to 7 days</h1>

<p>gitlab_rails[&lsquo;backup_keep_time&rsquo;] = 604800
```</p>

<p>修改完配置文件，再次执行sudo gitlab-ctl reconfigure，等执行完成后打开浏览器，此时应该就可以访问GitLab了。</p>

<p>若访问被防火墙拦截（比如我在Mac上访问虚拟机里安装的CentOS），则执行下面操作即可：
<code>sh
sudo vi /etc/sysconfig/iptables
</code></p>

<p>然后加入-A INPUT -m state &mdash;state NEW -m tcp -p tcp &mdash;dport 8888 -j ACCEPT</p>

<h2>更多</h2>

<ol>
<li>启动GitLab组件: gitlab-ctl start</li>
<li>停止GitLab组件: gitlab-ctl stop</li>
<li>重启GitLab组件: gitlab-ctl restart</li>
</ol>

]]></content>
  </entry>
  
</feed>
