<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | Balloonsys Inc.]]></title>
  <link href="http://balloonsys.github.io/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://balloonsys.github.io/"/>
  <updated>2014-02-26T20:15:59+08:00</updated>
  <id>http://balloonsys.github.io/</id>
  <author>
    <name><![CDATA[Balloonsys Inc.]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[关于View的用法简介]]></title>
    <link href="http://balloonsys.github.io/blog/2014/02/25/introduction-about-view/"/>
    <updated>2014-02-25T15:50:00+08:00</updated>
    <id>http://balloonsys.github.io/blog/2014/02/25/introduction-about-view</id>
    <content type="html"><![CDATA[<p>本文主要针对iOS的视图相关的用法作一些介绍。</p>

<h2>The Window</h2>

<p>当应用启动时，UIApplicationMain会创建一个appDelegate实例。App Delegate会“持有”一个window实例（strong型）。所以window对象的生命周期与应用一致。</p>

<p>获得window实例有三种方式：<br/>
1. view.window<br/>
2. [UIApplication sharedApplication].delegate.window <br/>
3. [UIApplication sharedApplication].keyWindow</p>

<p>需要注意的是keyWindow有可能发生变化，比如当显示UIAlertView时，keyWindow为该弹出框！</p>

<h2>Subview and Superview</h2>

<ol>
<li>限制子视图只在父视图区域内绘制，可设置父视图的clipsToBounds属性</li>
<li>判断一个视图是不是另一个的子孙视图，可以用isDescendantOfView:</li>
<li>子视图从父视图中移除掉，会被“释放”。若后续需使用，可另行“持有”</li>
<li>与视图结构相关的几个方法：
 insertSubview:atIndex:<br/>
 insertSubview:belowSubview:<br/>
 exchangeSubviewAtIndex:withSubviewAtIndex:<br/>
 bringSubviewToFront:</li>
<li>将父视图的所有子视图移除掉，可以用下面两种写法：<br/>
<code>objc
for (UIView *v in view.subviews)
 [v removeFromSuperview];
</code>
<code>objc
[view.subviews makeObjectPerformSelector:@selector(removeFromSuperView)];
</code></li>
</ol>


<h2>Layout</h2>

<p>说点什么吧</p>

<h3>Autoresizing</h3>

<p>说点什么吧</p>

<h3>Autolayout</h3>

<p>说点什么吧</p>

<h3>Constraints in the Nib</h3>

<p>说点什么吧</p>
]]></content>
  </entry>
  
</feed>
