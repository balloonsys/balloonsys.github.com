<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | Balloonsys Inc.]]></title>
  <link href="http://balloonsys.github.io/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://balloonsys.github.io/"/>
  <updated>2014-02-26T19:03:31+08:00</updated>
  <id>http://balloonsys.github.io/</id>
  <author>
    <name><![CDATA[Balloonsys Inc.]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[视图简介]]></title>
    <link href="http://balloonsys.github.io/blog/2014/02/25/introduction-about-view/"/>
    <updated>2014-02-25T15:50:00+08:00</updated>
    <id>http://balloonsys.github.io/blog/2014/02/25/introduction-about-view</id>
    <content type="html"><![CDATA[<p>本文是对iOS的视图用法的一些小结。</p>

<h2>The Window</h2>

<p>当应用启动时，UIApplicationMain会创建一个appDelegate实例。App Delegate会“持有”一个window实例（strong型）。所以window对象的生命周期与应用一致。</p>

<h3>使用storyboard</h3>

<p>如果appDelegate的window属性是nil，UIApplicationMain会实例化一个window并设到appDelegate中。如果appDelegate的window不是nil，则UIApplicationMain直接使用这个window实例作为app的主窗口。</p>

<p>所以，如果需要实例化自定义的Window对象并作为app的主窗口的话，只需在appDelegate中重写window的getter方法。</p>

<h3>不用storyboard</h3>

<p>直接在appDelegate中创建window的实例。所以，此时如果需要实例化自定义的Window对象，仅仅在创建实例时用自定义类型即可。</p>

<h2>Experimenting With Views</h2>

<p>说点什么吧</p>

<h2>Subview and Superview</h2>

<p>说点什么吧</p>

<h2>Layout</h2>

<p>说点什么吧</p>

<h3>Autoresizing</h3>

<p>说点什么吧</p>

<h3>Autolayout</h3>

<p>说点什么吧</p>

<h3>Constraints in the Nib</h3>

<p>说点什么吧</p>
]]></content>
  </entry>
  
</feed>
